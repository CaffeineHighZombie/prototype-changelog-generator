commit b637b9322e9ff9a747a914c4f949f04af7d8bc0f
Author: George Kalpakas <kalpakas.g@gmail.com>
Date:   Tue Dec 17 19:05:22 2019 +0200

    ci(docs-infra): fix failure in `aio_monitoring_stable` due to yarn version mismatch (#34451)
    
    The `aio_monitoring_stable` CI job is triggered as a cronjob on the
    master branch and its purpose is to run some e2e tests against the
    deployed stable version of the docs web-app at https://angular.io/. In
    order for the tests to be compatible with the deployed version of the
    web-app (which gets deployed from the stable branch), the stable branch
    is checked out in git as part of the CI job.
    
    Previously, we only checked out the `aio/` directory from the stable
    branch, leaving the rest of the code at master. This doesn't matter as
    long as the commands used to run the tests do not rely on code outside
    of `aio/`. However, it turns out that there _is_ code outside of `aio/`
    that affects the executed commands: It is our vendored version of yarn
    (in `third_party/github.com/yarnpkg/`), which overwrites the global yarn
    installed on the docker image on CI and must match the version range
    specified in `aio/package.json > engines`.
    
    Using the yarn version checked out from the master branch with the
    `aio/` code checked out from the stable branch can lead to failures
    such as [this one][1].
    
    This commit fixes the problem by checking out both the `aio/` and
    `third_party/github.com/yarnpkg/` directories from the stable branch and
    re-running the steps to overwrite the global yarn executable with our
    own version from `third_party/github.com/yarnpkg/`. This ensures that
    the version of yarn used will be compatible with the version range
    specified in `aio/package.json > engines`.
    
    NOTE:
    We cannot checkout everything from the stable branch, since the CI
    config (`.circleci/config.yml` from the master branch) may try to run
    certain scripts (such as `.circleci/get-vendored-yarn-path.js`) that are
    not available on the stable branch. Therefore, we should only check out
    the necessary bits from the stable branch.
    
    [1]: https://circleci.com/gh/angular/angular/567315
    
    PR Close #34451

commit 6bfe214346b5b7c0e7ede3848c2975a707fbf9ab
Author: ajitsinghkaler <ajitsinghkaler0@gmail.com>
Date:   Fri Dec 13 03:39:20 2019 +0530

    chore: add products.ts file on getting started page (#34301)
    
    in the getting started page (first tutorial) file products.ts which was not shown and was only present in the StackBlitz examples. So added a refrence that it is present in the example and also added a note that examples may carry filenames not present please look at StackBliz examples for details
    
    Fixes #34291
    
    PR Close #34301

commit 9ba8059e88d0494a4a4dcb00a848d6f776184329
Author: Paul Gschwendtner <paulgschwendtner@gmail.com>
Date:   Mon Dec 16 20:14:35 2019 +0100

    ci: update material-unit-tests job to include commit that reduced test flakiness (#34430)
    
    Updates the material-unit-tests job commit SHA to the most recent
    commit at the time of writing. The goal is to run the unit tests
    with https://github.com/angular/components/commit/6ae74a0eb21268d4b107a052a8cf8ae63078bf99
    that improved stability of a few menu tests that were flaky.
    
    e.g. https://circleci.com/gh/angular/angular/564650
    
    PR Close #34430

commit 763f8d470acf0bd75d692dad2b095455ab603e5d
Author: Alex Rickabaugh <alx+alxhub@alxandria.net>
Date:   Fri Dec 13 14:29:05 2019 -0800

    fix(ivy): validate the NgModule declarations field (#34404)
    
    This commit adds three previously missing validations to
    NgModule.declarations:
    
    1. It checks that declared classes are actually within the current
       compilation.
    
    2. It checks that declared classes are directives, components, or pipes.
    
    3. It checks that classes are declared in at most one NgModule.
    
    PR Close #34404

commit 9cabd6638e8573ab785fc59cee36111848ea367f
Author: George Kalpakas <kalpakas.g@gmail.com>
Date:   Thu Dec 5 21:02:57 2019 +0200

    refactor(ngcc): un-nest accidentally nested `describe()` blocks (#34437)
    
    PR Close #34437

commit cd8a837956a2e5ad76c4ff86453c88b29dd696fa
Author: George Kalpakas <kalpakas.g@gmail.com>
Date:   Thu Dec 5 21:02:57 2019 +0200

    refactor(ngcc): add debug messages to help with debugging in parallel mode (#34437)
    
    PR Close #34437

commit 5cecd97493025cd940c9ade4ea9f1836d5b05cc8
Author: Paul Gschwendtner <paulgschwendtner@gmail.com>
Date:   Mon Dec 16 21:47:37 2019 +0100

    feat(forms): expand NgModel disabled type to work with strict template type checking (#34438)
    
    NgModel internally coerces any arbitrary value that will assigned
    to the `disabled` `@Input` to a boolean. This has been done to
    support the common case where developers set the disabled attribute
    without a value. For example:
    
    ```html
    <input type="checkbox" [(ngModel)]="value" disabled>
    ```
    
    This worked in View Engine without any errors because inputs were
    not strictly checked. In Ivy though, developers can opt-in into
    strict template type checking where the attribute would be flagged.
    
    This is because the `NgModel#isDisabled` property type-wise only
    accepts a `boolean`. To ensure that the common pattern described
    above can still be used, and to reflect the actual runtime behavior,
    we should add an acceptance member that makes it work without type
    checking errors.
    
    Using a coercion member means that this is not a breaking change.
    
    PR Close #34438

commit 5df8a3ba954e7908a1a34b9383c776329fe75924
Author: Keen Yee Liau <kyliau@google.com>
Date:   Mon Dec 16 12:11:39 2019 -0800

    fix(language-service): HTML path should include last node before cursor (#34440)
    
    Given the following HTML and cursor position:
    ```
    <div c|></div>
          ^ cursor is here
    ```
    
    Note that the cursor is **after** the attribute `c`.
    
    Under the current implementation, only `Element` is included in the
    path. Instead, it should be `Element -> Attribute`.
    
    This bug occurs only for cases where the cursor is right after the Node,
    and it is because the `end` position of the span is excluded from the search.
    Instead, the `end` position should be included.
    
    PR Close #34440

commit 28b4f4abce62a755ffb0bacdd710f8de1e9dfc7b
Author: George Kalpakas <kalpakas.g@gmail.com>
Date:   Sun Dec 15 13:02:38 2019 +0200

    build: remove unused `polyfills-runtime.ts` file (#34424)
    
    The `polyfills-runtime.ts` file is used in the [integration/ivy-i18n][1]
    project, which has an appropriate [configuration][2]. The file was
    accidentally included in the `cli-hello-world-ivy-i18n` integration
    project was introduced in 4857c53a4, although it is not used there.
    
    This commit removes th `polyfills-runtime.ts` file from the
    `cli-hello-world-ivy-i18n` integration project.
    
    [1]: https://github.com/angular/angular/blob/f79110c63/integration/ivy-i18n/src/polyfills-runtime.ts
    [2]: https://github.com/angular/angular/blob/f79110c63/integration/ivy-i18n/angular.json#L65-L72
    
    PR Close #34424

commit 5eaab85fc064e69a94d104796123ea38619587ef
Author: Keen Yee Liau <kyliau@google.com>
Date:   Mon Dec 16 11:03:39 2019 -0800

    fix(language-service): Remove completions for let and of in ngFor (#34434)
    
    `let` and `of` should be considered reserved keywords in template syntax
    and thus should not be part of the autocomplete suggestions.
    
    For reference, TypeScript does not provide such completions.
    
    This commit removes these results and cleans up the code.
    
    PR Close #34434

commit 357a0733c74634615917f6fd89fa13f6609c1062
Author: Andrew Scott <atscott01@gmail.com>
Date:   Mon Dec 16 10:03:09 2019 -0800

    fix(ivy): reorder provider type checks to align with VE (#34433)
    
    The ordering matters because we don't currently throw if multiple
    configurations are provided (i.e. provider has *both* useExisting and
    useFactory). We should actually throw an error in this case, but to
    avoid another breaking change in v9, this PR simply aligns the Ivy
    behavior with ViewEngine.
    
    PR Close #34433

commit 835ed0f35fa187f4051129ab30b7b635f15aeb57
Author: crisbeto <crisbeto@abv.bg>
Date:   Sat Dec 14 17:29:35 2019 +0100

    fix(animations): leaking detached nodes when parent has a leave transition (#34409)
    
    In the TransitionAnimationEngine we keep track of the existing elements with animations and we clear the cached data when they're removed. We also have some logic where we transition away the child elements when a parent is removed, however in that case we never cleared the cached element data which resulted in a memory leak. The leak is particularly visible in Material where whenever there's an animated overlay with a component inside of it that has an animation, the child component would always be retained in memory.
    
    Fixes #25744.
    
    PR Close #34409

commit 1144ce97f91d6a96f4547fde443e9b06f2f351d0
Author: Michael Nahkies <michael@nahkies.co.nz>
Date:   Mon Dec 16 10:17:47 2019 +0000

    fix(common): ngStyle should ignore undefined values (#34422)
    
    Prior to ivy, undefined values passed in an object to the
    ngStyle directive were ignored. Restore this behavior by
    ignoring keys that point to undefined values.
    
    closes #34310
    
    PR Close #34422

commit 23cf11a788397f6f812c637e548a3d2023384e27
Author: Sonu Kapoor <sonukapoor@gmail.com>
Date:   Mon Dec 16 13:04:18 2019 -0500

    ci: fix remote name in rebase instructions (#34432)
    
    Previously, the rebase instructions were asking the user to rebase from
    `origin/master` instead of `upstream/master`.
    
    PR Close #34432

commit d0a04bf30980a60629c22b332de29040cea8e703
Author: Paul Gschwendtner <paulgschwendtner@gmail.com>
Date:   Mon Dec 16 16:50:20 2019 +0100

    ci: fix saucelabs_view_engine master-only failing (#34429)
    
    Currently the `saucelabs_view_engine` job fails because
    the Saucelabs Bazel run script thinks that `--config=saucelabs`
    is a flag targeting the actual script. This is not the case and
    the flag should be actually part of the bazel command.
    
    PR Close #34429

commit ddc229b69bbf26c7f0746aba270f200d451e077c
Author: Ayaz Hafiz <ayaz.hafiz.1@gmail.com>
Date:   Tue Jul 23 15:51:42 2019 -0700

    fix(ivy): record correct absolute source span for ngForOf expressions (#31813)
    
    Expressions in an inline template binding are improperly recorded as
    spaning an offset calculated from the start of the template binding
    attribute key, whereas they should be calculated from the start of the
    attribute value, which contains the actual binding AST.
    
    PR Close #31813

commit 12444a8afcbd14ce2a37d64efd3f42b11245d997
Author: JoostK <joost.koehoorn@gmail.com>
Date:   Sat Dec 14 22:35:00 2019 +0100

    test(ngcc): cleanup entry-point bundle testcases (#34415)
    
    There was an issue with the program under test and two tests with the
    same description, this has been fixed.
    
    PR Close #34415

commit a186dbc1d42ea7d492dcc4a587684926112832a8
Author: ajitsinghkaler <ajitsinghkaler0@gmail.com>
Date:   Sun Dec 15 11:36:12 2019 +0530

    chore(upgrade): add example links to `downgradeComponent()` function docs (#34406)
    
    There were some extra examples for `downgradeComponent()` in the upgrade
    guide. Added a link to the relevant section of the guide in the
    `downgradeComponent()` docs.
    
    Fixes #31584
    
    PR Close #34406

commit 04ab03664db817f879bcb2c674d9268bf2d38cfa
Author: Paul Gschwendtner <paulgschwendtner@gmail.com>
Date:   Thu Dec 12 10:39:10 2019 +0100

    ci: ensure saucelabs test output is human readable (#34277)
    
    Currently the Saucelabs test output (also an issue in the POC bazel
    saucelabs master-only cronjob), is very verbose because two Karma
    reporters conflict. Basically resulting in the progress messages
    being printed in new lines (while they usually are just updated
    using a tty cursor reset).
    
    PR Close #34277

commit 6d3a25d8977e272822a1955fec37fb6c483ed395
Author: Paul Gschwendtner <paulgschwendtner@gmail.com>
Date:   Fri Dec 6 16:17:09 2019 +0100

    ci: run acceptance tests on saucelabs with ivy (#34277)
    
    Currently we only run Saucelabs on PRs using the legacy View Engine
    build. Switching that build to Ivy is not trivial and there are various
    options:
    
      1. Updating the R3 switches to use POST_R3 by default. At first glance,
      this doesn't look easy because the current ngtsc switch logic seems to
      be unidirectional (only PRE_R3 to POST_R3).
    
      2. Updating the legacy setup to run with Ivy. This sounds like the easiest
      solution at first.. but it turns out to be way more complicated. Packages
      would need to be built with ngtsc using legacy tools (i.e. first building
      the compiler-cli; and then building packages) and View Engine only tests
      would need to be determined and filtered out. Basically it will result in
      re-auditing all test targets. This is contradictory to the fact that we have
      this information in Bazel already.
    
      3. Creating a new job that runs tests on Saucelabs with Bazel. We specify
      fine-grained test targets that should run. This would be a good start
      (e.g. acceptance tests) and also would mean that we do not continue maintaining
      the legacy setup..
    
    This commit implements the third option as it allows us to move forward
    with the general Bazel migration. We don't want to spend too much time
    on our legacy setup since it will be removed anyway in the future.
    
    PR Close #34277
